#if !canImport(ObjectiveC)
import XCTest

extension FeatureFlagResolverTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FeatureFlagResolverTests = [
        ("testIfValueIsOptional", testIfValueIsOptional),
        ("testIntValueResolution", testIntValueResolution),
        ("testNonexistentValueResolution", testNonexistentValueResolution),
        ("testOptionalIntValueResolution", testOptionalIntValueResolution),
        ("testOverrideFailureNoMutableStores", testOverrideFailureNoMutableStores),
        ("testOverrideFailureTypeMismatch", testOverrideFailureTypeMismatch),
        ("testOverrideForNewKeys", testOverrideForNewKeys),
        ("testOverrideSuccess", testOverrideSuccess),
        ("testOverrideValueValidationFailureOptional", testOverrideValueValidationFailureOptional),
        ("testOverrideValueValidationFailureTypeMismatch", testOverrideValueValidationFailureTypeMismatch),
        ("testOverrideValueValidationSuccess", testOverrideValueValidationSuccess),
        ("testStringValueResolution", testStringValueResolution),
        ("testValueRetrieval", testValueRetrieval),
        ("testValueRetrievalFromEmptyStoresArray", testValueRetrievalFromEmptyStoresArray),
        ("testValueValidation", testValueValidation),
    ]
}

extension FeatureFlagTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FeatureFlagTests = [
        ("testBoolProjectedValue", testBoolProjectedValue),
        ("testBoolWrappedValue", testBoolWrappedValue),
        ("testIntProjectedValue", testIntProjectedValue),
        ("testIntWrappedValue", testIntWrappedValue),
        ("testNonexistentIntProjectedValue", testNonexistentIntProjectedValue),
        ("testNonexistentIntWrappedValue", testNonexistentIntWrappedValue),
        ("testNonexistentWrappedValueOverride", testNonexistentWrappedValueOverride),
        ("testOptionalIntProjectedValue", testOptionalIntProjectedValue),
        ("testOptionalIntValue", testOptionalIntValue),
        ("testStringProjectedValue", testStringProjectedValue),
        ("testStringWrappedValue", testStringWrappedValue),
        ("testWrappedValueOverride", testWrappedValueOverride),
    ]
}

extension RuntimeOverridesStoreTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RuntimeOverridesStoreTests = [
        ("testRuntimeOverride", testRuntimeOverride),
        ("testRuntimeOverrideRemoval", testRuntimeOverrideRemoval),
    ]
}

extension UserDefaultsStoreTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UserDefaultsStoreTests = [
        ("testReadValueWithResolver", testReadValueWithResolver),
        ("testRemoveValueWithResolver", testRemoveValueWithResolver),
        ("testWriteAndReadValueWithResolver", testWriteAndReadValueWithResolver),
        ("testWriteValueWithResolver", testWriteValueWithResolver),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(FeatureFlagResolverTests.__allTests__FeatureFlagResolverTests),
        testCase(FeatureFlagTests.__allTests__FeatureFlagTests),
        testCase(RuntimeOverridesStoreTests.__allTests__RuntimeOverridesStoreTests),
        testCase(UserDefaultsStoreTests.__allTests__UserDefaultsStoreTests),
    ]
}
#endif
